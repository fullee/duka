using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Runtime.InteropServices;

using System.IO.Ports;
using System.Reflection;
using System.Text.RegularExpressions;
//using System.Threading;
using System.Diagnostics;

namespace Msprintcsharp
{
    public partial class Form1 : Form
    {
        [DllImport("kernel32.dll", EntryPoint = "GetSystemDefaultLCID")]
        public static extern int GetSystemDefaultLCID();  

        [DllImport("Msprintsdk.dll", EntryPoint = "SetInit", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetInit();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetUsbportauto", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetUsbportauto();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetClean", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetClean();
        
        [DllImport("Msprintsdk.dll", EntryPoint = "SetClose", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetClose(); 

        [DllImport("Msprintsdk.dll", EntryPoint = "SetAlignment", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetAlignment(int iAlignment);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetAlignmentLeftRight", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetAlignmentLeftRight(int iAlignment);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetBold", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetBold(int iBold);
        
        [DllImport("Msprintsdk.dll", EntryPoint = "SetCommandmode", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetCommandmode(int iMode);
        
        [DllImport("Msprintsdk.dll", EntryPoint = "SetLinespace", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetLinespace(int iLinespace);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetPrintport", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetPrintport(StringBuilder strPort, int iBaudrate);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintString", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintString(StringBuilder strData, int iImme);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintFeedline", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintFeedline(int iLine);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintSelfcheck", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintSelfcheck();

        [DllImport("Msprintsdk.dll", EntryPoint = "GetStatus", CharSet = CharSet.Ansi)]
        public static extern unsafe int GetStatus();

        [DllImport("Msprintsdk.dll", EntryPoint = "GetStatusspecial", CharSet = CharSet.Ansi)]
        public static extern unsafe int GetStatusspecial(); 

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintCutpaper", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintCutpaper(int iMode);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetSizetext", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetSizetext(int iHeight,int iWidth);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetSizechinese", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetSizechinese(int iHeight, int iWidth, int iUnderline, int iChinesetype);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetItalic", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetItalic(int iItalic);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintDiskbmpfile", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintDiskbmpfile(StringBuilder strData);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintDiskimgfile", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintDiskimgfile(StringBuilder strData);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintQrcode", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintQrcode(StringBuilder strData,int iLmargin,int iMside,int iRound);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintRemainQR", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintRemainQR();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetLeftmargin", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetLeftmargin(int iLmargin);

        [DllImport("Msprintsdk.dll", EntryPoint = "GetProductinformation", CharSet = CharSet.Ansi)]
        public static extern unsafe int GetProductinformation(int Fstype, byte[] FIDdata, int iFidlen);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintTransmit", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintTransmit(byte[] strCmd, int iLength);

        [DllImport("Msprintsdk.dll", EntryPoint = "GetTransmit", CharSet = CharSet.Ansi)]
        public static extern unsafe int GetTransmit(byte[] strCmd, int iLength, byte[] bRecv, int iRelen);


        [DllImport("Msprintsdk.dll", EntryPoint = "PrintFeedDot", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintFeedDot(int Lnumber);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintChargeRow", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintChargeRow();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetSpacechar", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetSpacechar(int iSpace);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetSizechar", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetSizechar(int iHeight, int iWidth, int iUnderline, int iAsciitype);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetRotate", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetRotate(int iRotate);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetDirection", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetDirection(int iDirection);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetWhitemodel", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetWhitemodel(int iWhite);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetUnderline", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetUnderline(int underline);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintNextHT", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintNextHT();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetHTseat", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetHTseat(byte[] bHTseat, int iLength); 

        [DllImport("Msprintsdk.dll", EntryPoint = "SetCodepage", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetCodepage(int country,int CPnumber);

        [DllImport("Msprintsdk.dll", EntryPoint = "Print1Dbar", CharSet = CharSet.Ansi)]
        public static extern unsafe int Print1Dbar(int iWidth, int iHeight, int iHrisize, int iHriseat, int iCodetype, StringBuilder strData);
  
        [DllImport("Msprintsdk.dll", EntryPoint = "SetPagemode", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetPagemode(int iMode,int Xrange,int Yrange);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetPagestartposition", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetPagestartposition(int Xdot, int Ydot);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetPagedirection", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetPagedirection(int iDirection);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintPagedata", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintPagedata();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetReadZKmode", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetReadZKmode(int mode);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetNvbmp", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetNvbmp(int iNums, StringBuilder strPath);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintNvbmp", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintNvbmp(int iNvindex,int iMode);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetPrintIDorName", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetPrintIDorName(StringBuilder strIDorNAME);

        [DllImport("Msprintsdk.dll", EntryPoint = "GetPrintIDorName", CharSet = CharSet.Ansi)]
        public static extern unsafe int GetPrintIDorName(StringBuilder strIDorNAME);


        [DllImport("Msprintsdk.dll", EntryPoint = "PrintMarkcutpaper", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintMarkcutpaper(int iMode);

        [DllImport("Msprintsdk.dll", EntryPoint = "SetTraceLog", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetTraceLog(int iLog);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintPdf417", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintPdf417(int iDotwidth,int iDotheight,int iDatarows,int iDatacolumns,StringBuilder strData);
        
        //旋转模式
        [DllImport("Msprintsdk.dll", EntryPoint = "SetRotation_Intomode", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetRotation_Intomode();

        [DllImport("Msprintsdk.dll", EntryPoint = "SetRotation_Leftspace", CharSet = CharSet.Ansi)]
        public static extern unsafe int SetRotation_Leftspace(int iLeftspace);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintRotation_Sendcode", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintRotation_Sendcode(int leftspace, int iWidth, int iHeight, int iCodetype, StringBuilder strData);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintRotation_Sendtext", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintRotation_Sendtext(StringBuilder strData, int iImme);

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintRotation_Changeline", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintRotation_Changeline();

        [DllImport("Msprintsdk.dll", EntryPoint = "PrintRotation_Data", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintRotation_Data();


        [DllImport("Msprintsdk.dll", EntryPoint = "PrintPDF_CCCB", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintPDF_CCCB(StringBuilder strData);  
  
        [DllImport("Msprintsdk.dll", EntryPoint = "PrintDataMatrix", CharSet = CharSet.Ansi)]
        public static extern unsafe int PrintDataMatrix(StringBuilder strData, int iSize);   


        int m_iInit = -1;       //打印机初始化状态
        int m_iStatus = -1;     //打印机状态
        //语言版本 Language
        int m_lcLanguage = 0;
        StringBuilder m_sbData = new StringBuilder("");

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        { 

            foreach (string vPortName in SerialPort.GetPortNames())  
            {
                cboPort.Items.Add(vPortName);
            }

            cboPort.Items.Add("USB001");
            cboPort.Items.Add("USB002");
            cboPort.Items.Add("USB003");
            cboPort.Items.Add("USB004");
            cboPort.Items.Add("SetUsbportauto");
            cboPort.SelectedIndex = cboPort.Items.Count-1;

            cboBandrate.Items.Add("9600");
            cboBandrate.Items.Add("38400");
            cboBandrate.Items.Add("115200");
            cboBandrate.SelectedIndex = 2;

            for(int iIndex = 1;iIndex<8;iIndex++)
                cboInfoIdx.Items.Add(iIndex);
            cboInfoIdx.SelectedIndex = 0;                

            cboSDKFunction.Items.Add("PrintSelfcheck");
            cboSDKFunction.Items.Add("PrintString");
            cboSDKFunction.Items.Add("PrintChargeRow");
            cboSDKFunction.Items.Add("PrintFeedDot");
            cboSDKFunction.Items.Add("SetLinespace");
            cboSDKFunction.Items.Add("SetSpacechar");
            cboSDKFunction.Items.Add("SetLeftmargin");
            cboSDKFunction.Items.Add("SetSizechar");
            cboSDKFunction.Items.Add("SetSizetext");
            cboSDKFunction.Items.Add("SetAlignment");
            cboSDKFunction.Items.Add("SetAlignmentLeftRight");
            cboSDKFunction.Items.Add("SetBold");
            cboSDKFunction.Items.Add("SetRotate");
            cboSDKFunction.Items.Add("SetDirection");
            cboSDKFunction.Items.Add("SetWhitemodel");
            cboSDKFunction.Items.Add("SetItalic");
            cboSDKFunction.Items.Add("SetUnderline");
            cboSDKFunction.Items.Add("SetHTseat");
            cboSDKFunction.Items.Add("PrintQrcode");
            cboSDKFunction.Items.Add("PrintDataMatrix"); 
            cboSDKFunction.Items.Add("SetCodepage");
            cboSDKFunction.Items.Add("Print1Dbar"); 
            cboSDKFunction.Items.Add("SetPagemode");
            cboSDKFunction.Items.Add("PrintCutpaper");
            cboSDKFunction.Items.Add("Rotation");
            cboSDKFunction.SelectedIndex = 0; 
    //        cboSDKFunction.SelectedIndex = cboSDKFunction.Items.Count - 1;


            cboExample.Items.Add("ITF Code");
            cboExample.Items.Add("TEST");
            cboExample.SelectedIndex = 0; 

            cboCheckSum.Items.Add("PrintSelfcheck");
            cboCheckSum.Items.Add("PrintString");
            cboCheckSum.Items.Add("PrintFeedDot");
            cboCheckSum.Items.Add("PrintCutpaper");
            cboCheckSum.SelectedIndex = 0;

            for(int iIndex=1;iIndex<11;iIndex++)
                cboNvbmp.Items.Add(iIndex);
            cboNvbmp.SelectedIndex = 0;

            ctrlStatus(false);
            m_lcLanguage = GetSystemDefaultLCID(); 
        }

        private void btnInit_Click(object sender, EventArgs e)
        {
            try
            {
                //SetTraceLog(1);
                if (m_iInit != 0)
                {
                    StringBuilder sPort = new StringBuilder(cboPort.Text, cboPort.Text.Length);
                    int iBaudrate = int.Parse(cboBandrate.Text);
                    SetPrintport(sPort, iBaudrate);
                    if(sPort.ToString()=="SetUsbportauto")
                        SetUsbportauto();

                    m_iInit = SetInit();

                    if (m_iInit == 0)
                    {
                        ctrlStatus(true);
                        btnInit.Text = "SetClose";
                        SetCommandmode(3);
                    }
                    else
                    {
                        MessageBox.Show("InitPrinter failure!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    }
                }
                else
                {
                    ctrlStatus(false);
                    SetClose();
                    btnInit.Text = "SetInit";
                    m_iInit = -1;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }

        }

        private void ctrlStatus(bool blnEnabled)
        {
            btnPrint.Enabled = blnEnabled;
            button2.Enabled = blnEnabled;
            button3.Enabled = blnEnabled;
            button4.Enabled = blnEnabled;
            button5.Enabled = blnEnabled;
            button6.Enabled = blnEnabled;
            button7.Enabled = blnEnabled;
            button8.Enabled = blnEnabled;
            button9.Enabled = blnEnabled;
            button10.Enabled = blnEnabled;
            btnCheckSum.Enabled = blnEnabled;
            btnExample.Enabled = blnEnabled;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog openFileDialog = new OpenFileDialog();
                //openFileDialog.InitialDirectory = "c:\\";//注意这里写路径时要用c:\\而不是c:\
                openFileDialog.Filter = "BMP File|*.bmp";
                openFileDialog.RestoreDirectory = true;
                openFileDialog.FilterIndex = 1;
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    textBox3.Text = textBox3.Text+openFileDialog.FileName + ";"; 
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
        }         

        private void button2_Click(object sender, EventArgs e)
        {
            textBox1.Text = "";
            textBox4.Text = "";
            try
            { 
                if (m_iInit != 0)
                {
                    MessageBox.Show("No initialization!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
                m_iStatus = GetStatus();
                textBox1.Text = m_iStatus.ToString();

                m_iStatus = GetStatusspecial();
                textBox4.Text = m_iStatus.ToString(); 
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            //Ep802_Test_Bet3000();
            //Ep802_PageMode_Test_Plus();
            //Ep802_PageMode_Star();
            //PrintBSW(); //波斯文
            
            //SetCodepage(0, 3);
            //PrintString(new StringBuilder("波斯文"), 0);
            // PrintString(new StringBuilder("ใบเสร็จ ราคา น้ำอัดลม หมู"), 0);

            //PrintTCTest();
            //return;
           

            /*
            int iIndex = 0;
            byte[] bByte = new byte[128];
            for (int ii = 0; ii < 10; ii++)
            {
                SetClean();
                SetCommandmode(3);

                PrintFeedline(1);

                SetLeftmargin(1);
                SetAlignment(1);
                SetLinespace(30);
                SetSizetext(1, 1);
                SetSizechar(1, 0, 0, 0);
                SetBold(1);

                PrintString(new StringBuilder("EP802 Linux SDK"), 0);
                PrintFeedline(2);


                SetAlignment(1);
                SetBold(0);
                SetSizechar(0, 0, 0, 0);
                SetSizetext(0, 0);
                PrintString(new StringBuilder("Printed by the EP802 from Eurocoin"), 1);
                PrintString(new StringBuilder("For more information please call"), 1);
                PrintString(new StringBuilder("+44 (0) 01707 280 028"), 0);
                //PrintString("£ $ €");




                SetCodepage(5, 16);
                //bByte[iIndex++]= 0x0A;
                PrintString(new StringBuilder("WIN"), 1);
                bByte[iIndex++] = 0x80;
                //bByte[iIndex++]= 0x0A;
                PrintTransmit(bByte, iIndex);
                PrintString(new StringBuilder("10,765"), 0);
                //PrintTransmit(bByte,iIndex) ;

                PrintChargeRow();
                PrintFeedline(1);

                SetAlignment(1);
                SetLeftmargin(120);
                Print1Dbar(3, 100, 0, 2, 5, new StringBuilder("1234567890123"));
                SetLeftmargin(1);
                PrintFeedline(1);


                SetAlignment(1);
                ////	now = time (NULL);   

                //	PrintString(ctime(&now)); 	 
                PrintQrcode(new StringBuilder("www.eurocoin.co.uk"),5,6,0);  

                PrintFeedline(5);
                PrintCutpaper(1);
            }
        return;
            */
            StringBuilder sbData = new StringBuilder("");


            SetCommandmode(3);
            SetSizetext(1, 1);
            sbData = new StringBuilder("------------------------------------------------");
            PrintString(sbData, 0);
            SetAlignment(1);
            SetBold(1);
            sbData = new StringBuilder("** Page Mode OFF**");
            PrintString(sbData, 0);
            sbData = new StringBuilder("------------------------------------------------");
            PrintString(sbData, 0);
            SetAlignment(0);
            SetBold(0);
            PrintFeedline(2);


            SetLeftmargin(140);
            sbData = new StringBuilder("C:\\EP800logo\\logo.bmp");
         //   PrintDiskbmpfile(sbData);
           // SetClean();
           //Thread.Sleep(1000);
            SetLeftmargin(0);
            PrintFeedline(1);


            sbData = new StringBuilder(DateTime.Now.ToLocalTime().ToString());
            PrintString(sbData, 0);
            PrintFeedline(1);
            sbData = new StringBuilder("Receipt No: 04-750");
            PrintString(sbData, 0);
            PrintFeedline(1);
            sbData = new StringBuilder("Sales        : 11254");
            PrintString(sbData, 0);
            sbData = new StringBuilder("Till         : A2");
            PrintString(sbData, 0);
            sbData = new StringBuilder("Payment Type : Contactless");
            PrintString(sbData, 0);
            PrintFeedline(1);


            sbData = new StringBuilder("Item Name");
            SetAlignmentLeftRight(0);
            PrintString(sbData, 1);
            sbData = new StringBuilder("Price");
            SetAlignmentLeftRight(2);
            PrintString(sbData, 0);

            sbData = new StringBuilder("===============================================");
            PrintString(sbData, 0);
            PrintFeedline(1);

            sbData = new StringBuilder("2 Rapberry Rum Collins");
            SetAlignmentLeftRight(0);
            PrintString(sbData, 1);
            sbData = new StringBuilder("£6.74");
            SetAlignmentLeftRight(2);
            PrintString(sbData, 0);

            sbData = new StringBuilder("1 Spicy Chicken Burger ");
            SetAlignmentLeftRight(0);
            PrintString(sbData, 1);
            sbData = new StringBuilder("£12.75");
            SetAlignmentLeftRight(2);
            PrintString(sbData, 0);

            sbData = new StringBuilder("1 BBQ Pork Burrito");
            SetAlignmentLeftRight(0);
            PrintString(sbData, 1);
            sbData = new StringBuilder("£11.25");
            SetAlignmentLeftRight(2);
            PrintString(sbData, 0);
            //SetAlignmentLeftRight(0);



            PrintFeedline(1);
            sbData = new StringBuilder("===============================================");
            PrintString(sbData, 0);
            sbData = new StringBuilder("                            Total: £30.75");
            SetAlignment(2);
            PrintString(sbData, 0);
            PrintFeedline(3);
            SetAlignment(1);
            sbData = new StringBuilder("Thank you for your visit");
            PrintString(sbData, 0);
            sbData = new StringBuilder("We look forward to seeing you again");
            PrintString(sbData, 0);
            PrintFeedline(1);
            SetBold(1);
            sbData = new StringBuilder("www.eurocoin.co.uk");
            PrintString(sbData, 0);
            PrintFeedline(1);
            SetAlignment(1);
            SetBold(0);
            SetSizetext(1, 1);
            sbData = new StringBuilder("0123456789");
            Print1Dbar(2, 100, 0, 2, 5, sbData);
            PrintFeedline(2);


            PrintFeedline(5);
            PrintCutpaper(0);
            SetClean();


            return;
            try
            {

                //SetCommandmode(3);
                //String sbCmd = "";
                //sbCmd = String.Format("%d%d%d", 0x1C, 0x81, 0x30);
                //sbCmd = "\x1B\x25\x47";
                //byte[] bByte = new byte[3];
                //bByte[0] = 0x1B;
                //bByte[1] = 0x25;
                //bByte[2] = 0x47;
                //PrintTransmit(bByte, 3);
                //sbData = new StringBuilder("  Your number is:");
                //PrintString(sbData, 0);
                //return;
               //SetCommandmode(2);


                if (m_lcLanguage == 0x804)
                { 
                    sbData = new StringBuilder("  您的号码是:");
                }
                else
                    sbData = new StringBuilder("  Your number is:"); 

               //  StringBuilder sbData = new StringBuilder("1ß");
                SetClean();
                if (m_lcLanguage == 0x804)
                {
                    SetReadZKmode(0);
                }

                SetAlignment(0);
                SetSizetext(2, 1);
                SetLinespace(20);  
                PrintString(sbData,0);

                SetAlignment(1);
                SetBold(1);
                SetSizetext(2, 2);
                sbData = new StringBuilder("A015");        
                PrintString(sbData,0);

                SetAlignment(0);
                SetBold(0);
                SetSizetext(2, 1);
                PrintFeedDot(10);

                if (m_lcLanguage == 0x804)
                    sbData = new StringBuilder("您前面有 2 人等候,注意业务窗口的呼叫号码信息。过号请重新取号。");
                else
                    sbData = new StringBuilder("There are 2 people waiting in front of you. Pay attention to the call number of the business window. Please repeat the number again."); 
                PrintString(sbData,1);

                PrintFeedDot(60);

                if (m_lcLanguage == 0x804)
                {
                    SetSizechinese(1, 1, 1, 0);
                    sbData = new StringBuilder("  谢谢您的合作!");

                }
                else
                    sbData = new StringBuilder("  Thank you for your cooperation!"); 

                PrintString(sbData,1);
                PrintFeedDot(60);

                SetClean();
                SetCommandmode(3);
                sbData = new StringBuilder("QR Code:123456");
                PrintQrcode(sbData, 2, 6, 1);

                SetLeftmargin(160);
                sbData = new StringBuilder("QR Code:");
                PrintString(sbData, 0);
                sbData = new StringBuilder("123456");
                PrintString(sbData, 0); 

	            PrintRemainQR();
                PrintFeedDot(30);


                SetClean();
                SetSizetext(0, 0);
                SetAlignment(2); 
                sbData = new StringBuilder(DateTime.Now.ToLocalTime().ToString());
                PrintString(sbData,1);
                PrintFeedDot(150);
	            PrintCutpaper(0);
             }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
       
        }

        private void Ep802_PageMode_Test()
        {
            byte[] bSendData = {0x1b,0x40
                                   ,0x1b,0x79,0x03
                                   ,0x1b,0x24,0xbe,0x00,0x1b,0x21,0x0a,0x49,0x4e,0x53,0x45,0x52,0x54,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x49,0x44,0x45,0x20,0x55,0x50
                                   ,0x1b,0x64,0x01,0x1b,0x61,0x01,0x1c,0x70,0x01,0x30,0x1b,0x64,0x01
                                    ,0x1b,0x4c  //进入页模式
                                    ,0x1b,0x54,0x03 //方向
                                    ,0x1d,0x5c,0x00,0x00//垂直打印位置
                                    ,0x1b,0x24,0x96,0x00//绝对打印位置
                                    ,0x1b,0x21,0x38//
                                    ,0x54,0x65,0x73,0x74,0x69,0x6e,0x67,0x20,0x72,0x65,0x63,0x65,0x69,0x70,0x74
                                    ,0x1b,0x64,0x02
                                    ,0x1b,0x24,0x1e,0x00
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33
                                    ,0x1b,0x64,0x01
                                    ,0x1d,0x5c,0x28,0x00
                                    ,0x1b,0x24,0x96,0x00
                                    ,0x1b,0x21,0x39
                                    ,0x50,0x49,0x4e,0x3a,0x20,0x31,0x32,0x33,0x34,0x2d,0x35,0x36,0x37,0x38,0x2d,0x39,0x31,0x32,0x33,0x2d,0x34,0x35,0x36,0x37
                                    ,0x1b,0x64,0x02
                                    ,0x1b,0x24,0x64,0x00
                                    ,0x1d,0x48,0x00 //选择HRI字符的打印位置
                                    ,0x1d,0x68,0x73,0x1d,0x77,0x04 //条码
                                    ,0x1d,0x6b,0x05,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x31,0x32,0x33,0x34,0x35,0x36,0x37
                                    ,0x00
                                    ,0x1b,0x64,0x04
                                    ,0x1b,0x24,0x1e,0x00
                                    ,0x1b,0x21,0x0a
                                    ,0x44,0x61,0x74,0x65,0x3a,0x20,0x30,0x38,0x2e,0x30,0x35,0x2e,0x32,0x30,0x31,0x38,0x20,0x31,0x36,0x3a,0x31,0x30,0x3a,0x30,0x37   //Date:
                                    ,0x1b,0x24,0xc8,0x01
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x3a,0x20,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x30,0x1b,0x64,0x01,0x1b,0x24,0x1e,0x00
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x32,0x3a,0x20,0x59,0x65,0x73
                                    ,0x1b,0x24,0xc8,0x01
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x33,0x3a,0x20,0x4e,0x6f
                                    ,0x1b,0x64,0x01
                                    ,0x1b,0x24,0x1e,0x00
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x34,0x2c,0x35,0x2c,0x36,0x3a,0x20,0x4f,0x4b
                                    ,0x1b,0x64,0x01
                                    ,0x1b,0x24,0x1e
                                    ,0x00
                                    ,0x1b,0x21,0x01
                                    ,0x41,0x6e,0x6f,0x74,0x68,0x65,0x72,0x20,0x6c,0x69,0x6e,0x65,0x20,0x68,0x65,0x72,0x65
                                    ,0x1b,0x64,0x01
                                    ,0x1b,0x24,0xc8,0x00
                                    ,0x1b,0x21,0x39
                                    ,0x41,0x6d,0x6f,0x75,0x6e,0x74,0x3a,0x20,0x32,0x35,0x30,0x2e,0x30,0x30,0x24
                                    ,0x1b,0x64,0x01 
                                    ,0x1b,0x24,0x1e,0x00
                                    ,0x1b,0x21,0x01
                                    ,0x54,0x68,0x69,0x73,0x20,0x64,0x6f,0x65,0x73,0x6e,0x27,0x74,0x20,0x61,0x70,0x70,0x65,0x61
                                    ,0x72,0x20,0x66,0x75,0x6c,0x6c,0x79,0x20,0x6f,0x6e,0x20,0x70,0x61,0x70,0x65,0x72,0x20,0x2d,0x20,0x6f,0x6e,0x6c,0x79,0x20,0x74,0x68,0x65,0x20,0x70,0x61,0x72,0x74,0x20,0x74,0x68,0x61,0x74,0x20,0x77,0x6f,0x6e,0x27,0x74,0x20,0x66,0x69,0x74,0x20,0x69,0x6e,0x74,0x6f,0x20,0x31,0x20,0x6c,0x69,0x6e,0x65,0x20,0x2d,0x20,0x74,0x68,0x69,0x73,0x20,0x70,0x61,0x72,0x74,0x20,0x61,0x70,0x70,0x65,0x61,0x72,0x73,0x20,0x61,0x74,0x20,0x74,0x68,0x65,0x20,0x74,0x6f,0x70,0x21,0x21
                                    ,0x1b,0x64,0x01
                                    ,0x1b,0x0c,0x1b,0x53
                                ,0x1b,0x4c,0x1b,0x54,0x02,0x1b,0x57,0x00,0x00,0x00,0x00,0x00,0x02,0x64,0x00,0x1b,0x24,0x64,0x00,0x1b,0x21,0x0a,0x49,0x4e,0x53,0x45,0x52,0x54,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x49,0x44,0x45,0x20,0x55,0x50,0x1b,0x0c,0x1b,0x53,0x1b,0x64,0x06,0x1b,0x6d};
            SetLeftmargin(0);
            PrintString(new StringBuilder("Normal mode"), 0);
            PrintFeedline(2);

            PrintString(new StringBuilder("Page mode"), 0);
         //   PrintFeedline(2);
            PrintTransmit(bSendData, bSendData.Length);
           // PrintCutpaper(0);

        }

        private void Ep802_PageMode_Test_Plus()
        {
            byte[] bSendData = {0x1b,0x40
                                   ,0x1b,0x79,0x03  //
                                   //,0x1b,0x24,0xbe,0x00,0x1b,0x21,0x0a,0x49,0x4e,0x53,0x45,0x52,0x54,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x49,0x44,0x45,0x20,0x55,0x50
                                   //,0x1b,0x64,0x01,0x1b,0x61,0x01,0x1c,0x70,0x01,0x30,0x1b,0x64,0x01
                                    ,0x11,0x21  //Entry page mode
                                    ,0x11,0x25,0x03 //direction
                                    ,0x11,0x24,0x00,0xA0,0x00,0x14//Print starting coordinates
                                    ,0x1b,0x21,0x38//
                                    ,0x54,0x65,0x73,0x74,0x69,0x6e,0x67,0x20,0x72,0x65,0x63,0x65,0x69,0x70,0x74 
                                    ,0x11,0x24,0x00,0x1e,0x00,0x50//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33,0x20,0x54,0x65,0x73,0x74,0x20,0x31,0x32,0x33
                                    ,0x11,0x24,0x00,0x96,0x00,0x98//Print starting coordinates
                                    ,0x1b,0x21,0x39
                                    ,0x50,0x49,0x4e,0x3a,0x20,0x31,0x32,0x33,0x34,0x2d,0x35,0x36,0x37,0x38,0x2d,0x39,0x31,0x32,0x33,0x2d,0x34,0x35,0x36,0x37
                                    ,0x11,0x24,0x00,0x64,0x00,0xC2//Print starting coordinates
                                    ,0x1d,0x48,0x00 //
                                    ,0x1d,0x68,0x73,0x1d,0x77,0x04 //barcode
                                    ,0x1d,0x6b,0x05,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x00
                                    ,0x11,0x24,0x00,0x1e,0x01,0x4C//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x44,0x61,0x74,0x65,0x3a,0x20,0x30,0x38,0x2e,0x30,0x35,0x2e,0x32,0x30,0x31,0x38,0x20,0x31,0x36,0x3a,0x31,0x30,0x3a,0x30,0x37   //Date:
                                    ,0x11,0x24,0x01,0xC8,0x01,0x4C//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x3a,0x20,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x30
                                    ,0x11,0x24,0x00,0x1e,0x01,0x6C//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x32,0x3a,0x20,0x59,0x65,0x73
                                    ,0x11,0x24,0x01,0xC8,0x01,0x6C//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x33,0x3a,0x20,0x4e,0x6f
                                    ,0x11,0x24,0x00,0x1E,0x01,0x88//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x54,0x65,0x73,0x74,0x20,0x34,0x2c,0x35,0x2c,0x36,0x3a,0x20,0x4f,0x4b
                                    ,0x11,0x24,0x00,0x1E,0x01,0xA4//Print starting coordinates
                                    ,0x1b,0x21,0x01
                                    ,0x41,0x6e,0x6f,0x74,0x68,0x65,0x72,0x20,0x6c,0x69,0x6e,0x65,0x20,0x68,0x65,0x72,0x65
                                    ,0x11,0x24,0x00,0xC8,0x01,0xC0//Print starting coordinates
                                    ,0x1b,0x21,0x39
                                    ,0x41,0x41,0x6f,0x75,0x6e,0x74,0x3a,0x20,0x32,0x35,0x30,0x2e,0x30,0x30,0x24,0x0a,0x0a
                                    ,0x11,0x24,0x00,0x1E,0x01,0xF0//Print starting coordinates
                                    ,0x1b,0x21,0x01
                                    ,0x41,0x42,0x69,0x73,0x20,0x64,0x6f,0x65,0x73,0x6e,0x27,0x74,0x20,0x61,0x70,0x70,0x65,0x61,0x41,0x43,0x66,0x75,0x6c,0x6c
                                    ,0x79,0x20,0x6f,0x6e,0x20,0x70,0x61,0x70,0x65,0x72,0x20,0x2d,0x20,0x6f,0x6e,0x6c,0x79,0x20,0x74,0x68,0x65,0x20,0x70,0x61
                                    ,0x72,0x74,0x20,0x74,0x68,0x61,0x74,0x20,0x77,0x6f,0x6e,0x27,0x74,0x20,0x66,0x69,0x74,0x20,0x69,0x6e,0x74,0x6f,0x20,0x31,0x0a
                                    ,0x20,0x6c,0x69,0x6e,0x65,0x20,0x2d,0x20,0x74,0x68,0x69,0x73,0x20,0x70,0x61,0x72,0x74,0x20,0x61,0x70,0x70,0x65,0x61,0x72
                                    ,0x73,0x20,0x61,0x74,0x20,0x74,0x68,0x65,0x20,0x74,0x6f,0x70,0x21,0x21
                                    ,0x11,0x24,0x00,0xC8,0x02,0x20//Print starting coordinates
                                    ,0x1b,0x21,0x0a
                                    ,0x49,0x4e,0x53,0x45,0x52,0x54,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x49,0x44,0x45,0x20,0x55,0x50
                                    ,0x11,0x0c //page print
                                    ,0x11,0x22
                                    ,0x1b,0x53,0x1b,0x64,0x06,0x1b,0x6d};
            SetLeftmargin(0);
            PrintString(new StringBuilder("Normal mode"), 0);
            PrintFeedline(2);

            PrintString(new StringBuilder("Page mode"), 0);
            //   PrintFeedline(2);
            PrintTransmit(bSendData, bSendData.Length);
            // PrintCutpaper(0);
        }

        private void Ep802_Test_Bet3000()
        {
            byte[] bSendData = { 0x1B, 0x40
                                   , 0x1B, 0x79, 0x03
                                   , 0x1B, 0x74, 0x10, 0x1D, 0x4C, 0x1E, 0x00, 0x1B, 0x4D, 0x01, 0x1B, 0x61, 0x01, 0x1D, 0x21, 0x11, 0x1B, 0x45, 0x01
                                   , 0x1D, 0x76, 0x30, 0x30, 0x26, 0x00, 0x78, 0x00
                                   ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFC,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xC0,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE1,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x1F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x07,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x03,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x80,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xC0,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x03,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x07,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x0F,0x00,0x00,0x0F,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x3E,0x00,0x00,0x0F,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0xFC,0x00,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xF0,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xE0,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x7F,0x83,0xE0,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x0F,0xFC,0x00,0x00,0x00,0x3F,0xF8,0x00,0x00,0x00,0x7F,0xF0,0x00,0x3E,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x7F,0x83,0xE0,0x00,0x00,0x00,0xFF,0xFF,0xFE,0x00,0x00,0x7F,0xFF,0x80,0x00,0x00,0xFF,0xFE,0x00,0x00,0x03,0xFF,0xFC,0x00,0x1F,0x00,0x00,0x00,0x3F,0xF0,0x07,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x7F,0x83,0xE0,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x01,0xFF,0xFF,0xC0,0x00,0x03,0xFF,0xFF,0x80,0x00,0x07,0xFF,0xFF,0x00,0x1F,0x00,0x00,0x00,0x3F,0xE0,0x01,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0xF0,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x80,0x03,0xFF,0xFF,0xE0,0x00,0x0F,0xFF,0xFF,0xC0,0x00,0x1F,0xFF,0xFF,0x80,0x1F,0x00,0x00,0x00,0x3F,0xE0,0x00,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0xF0,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xC0,0x07,0xFF,0xFF,0xF0,0x00,0x1F,0xFF,0xFF,0xE0,0x00,0x3F,0xFF,0xFF,0x80,0x0F,0x80,0x00,0x00,0x3F,0xC0,0x00,0x7F,0xE0,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0xF0,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xC0,0x0F,0xFF,0xFF,0xF0,0x00,0x3F,0xFF,0xFF,0xE0,0x00,0x7F,0xFF,0xFF,0xC0,0x0F,0x80,0x00,0x00,0x7F,0xC0,0x00,0x7F,0xC0,0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0xF8,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xE0,0x1F,0xFF,0xFF,0xF8,0x00,0x7F,0xFF,0xFF,0xF0,0x00,0xFF,0xFF,0xFF,0xC0,0x0F,0x80,0x00,0x00,0x7F,0xC0,0x00,0x7F,0xC0,0x00,0x00,0x00,0x00,0x01,0xFE,0x00,0xF8,0x00,0x00,0x03,0x80,0x07,0xFF,0xE0,0x3F,0xFC,0x3F,0xF8,0x00,0x7F,0xF0,0x7F,0xF0,0x01,0xFF,0xE1,0xFF,0xE0,0x07,0xC0,0x00,0x00,0x7F,0xC0,0x00,0x7F,0xC0,0x00,0x00,0x00,0x00,0x01,0xFF,0xF0,0xF8,0x00,0x00,0x00,0x00,0x01,0xFF,0xE0,0x7F,0xF0,0x1F,0xFC,0x00,0xFF,0xE0,0x3F,0xF0,0x01,0xFF,0x80,0x7F,0xE0,0x07,0xC0,0x00,0x00,0x7F,0x80,0x00,0xFF,0x80,0x00,0x07,0xE0,0x01,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x01,0xFF,0xE0,0x7F,0xE0,0x0F,0xFC,0x01,0xFF,0xC0,0x1F,0xF8,0x03,0xFF,0x00,0x7F,0xE0,0x07,0xC0,0x00,0x00,0xFF,0x80,0x00,0xFF,0x80,0x00,0x7F,0xFC,0x01,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x01,0xFF,0xE0,0xFF,0xC0,0x0F,0xFC,0x01,0xFF,0x80,0x1F,0xF8,0x03,0xFE,0x00,0x3F,0xF0,0x03,0xE0,0x00,0x00,0xFF,0x80,0x03,0xFF,0x00,0x01,0xFF,0xFE,0x03,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x01,0xFF,0xC0,0xFF,0x80,0x07,0xFC,0x03,0xFF,0x00,0x1F,0xF8,0x07,0xFE,0x00,0x3F,0xF0,0x03,0xE0,0x00,0x00,0xFF,0x80,0x0F,0xFF,0x00,0x03,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x01,0xFF,0xC1,0xFF,0x80,0x07,0xFE,0x03,0xFE,0x00,0x0F,0xF8,0x07,0xFC,0x00,0x3F,0xF0,0x03,0xE0,0x00,0x00,0xFF,0x00,0x3F,0xFE,0x00,0x07,0xFF,0xFF,0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x01,0xFF,0xC1,0xFF,0x00,0x07,0xFE,0x07,0xFE,0x00,0x0F,0xF8,0x0F,0xFC,0x00,0x1F,0xF0,0x01,0xF0,0x00,0x01,0xFF,0x01,0xFF,0xFC,0x00,0x1F,0xFF,0xFF,0xC7,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x03,0xFF,0x83,0xFF,0x00,0x07,0xFE,0x07,0xFC,0x00,0x0F,0xF8,0x0F,0xF8,0x00,0x1F,0xF0,0x01,0xF0,0x00,0x01,0xFF,0xFF,0xFF,0xF8,0x00,0x3F,0xFF,0xFF,0xC7,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x07,0xFF,0x03,0xFE,0x00,0x07,0xFE,0x07,0xFC,0x00,0x0F,0xF8,0x1F,0xF8,0x00,0x1F,0xF0,0x01,0xF0,0x00,0x01,0xFF,0xFF,0xFF,0xF0,0x00,0x7F,0xFF,0xFF,0xE0,0x07,0xF8,0x00,0x1F,0xFF,0xFC,0x00,0x00,0x0F,0xFF,0x07,0xFE,0x00,0x07,0xFE,0x0F,0xFC,0x00,0x0F,0xF8,0x1F,0xF0,0x00,0x1F,0xF0,0x00,0xF8,0x00,0x03,0xFF,0xFF,0xFF,0xE0,0x00,0xFF,0xF0,0x7F,0xE0,0x07,0xF0,0x00,0x1F,0x0F,0xFC,0x00,0x00,0x7F,0xFE,0x07,0xFE,0x00,0x07,0xFE,0x0F,0xF8,0x00,0x0F,0xF8,0x1F,0xF0,0x00,0x1F,0xF0,0x00,0xF8,0x00,0x03,0xFF,0xFF,0xFF,0xC0,0x00,0xFF,0xC0,0x3F,0xE0,0x0F,0xF0,0x00,0x1F,0x83,0xFC,0x00,0xFF,0xFF,0xFC,0x07,0xFC,0x00,0x07,0xFE,0x0F,0xF8,0x00,0x0F,0xF8,0x3F,0xF0,0x00,0x3F,0xF0,0x00,0xF8,0x00,0x03,0xFF,0xFF,0xFF,0xF0,0x01,0xFF,0x80,0x1F,0xF0,0x0F,0xF0,0x00,0x0F,0x81,0xFC,0x00,0xFF,0xFF,0xF8,0x07,0xFC,0x00,0x07,0xFC,0x1F,0xF8,0x00,0x0F,0xF8,0x3F,0xF0,0x00,0x3F,0xF0,0x00,0x7C,0x00,0x03,0xFF,0xFF,0xFF,0xF0,0x03,0xFF,0x00,0x1F,0xF0,0x0F,0xF0,0x00,0x0F,0x83,0xF8,0x01,0xFF,0xFF,0xE0,0x0F,0xFC,0x00,0x07,0xFC,0x1F,0xF8,0x00,0x1F,0xF8,0x3F,0xE0,0x00,0x3F,0xF0,0x00,0x7C,0x00,0x07,0xFF,0xFF,0xFF,0xF8,0x03,0xFE,0x00,0x1F,0xF0,0x1F,0xE0,0x00,0x0F,0x83,0xF8,0x01,0xFF,0xFF,0x80,0x0F,0xFC,0x00,0x07,0xFC,0x1F,0xF0,0x00,0x1F,0xF8,0x3F,0xE0,0x00,0x3F,0xF0,0x00,0x7C,0x00,0x07,0xFF,0xFF,0xFF,0xFC,0x07,0xFE,0x00,0x1F,0xF0,0x1F,0xE0,0x00,0x07,0xCF,0xF0,0x01,0xFF,0xFF,0xC0,0x0F,0xF8,0x00,0x0F,0xFC,0x1F,0xF0,0x00,0x1F,0xF8,0x7F,0xE0,0x00,0x3F,0xE0,0x00,0x3E,0x00,0x07,0xFC,0x00,0x3F,0xFC,0x07,0xFC,0x00,0x1F,0xF0,0x1F,0xE0,0x00,0x07,0xDF,0xC0,0x03,0xFF,0xFF,0xF0,0x0F,0xF8,0x00,0x0F,0xFC,0x3F,0xF0,0x00,0x1F,0xF0,0x7F,0xE0,0x00,0x3F,0xE0,0x00,0x3E,0x00,0x07,0xFC,0x00,0x0F,0xFE,0x0F,0xFF,0xFF,0xFF,0xF0,0x1F,0xE0,0x00,0x07,0xFF,0x80,0x03,0xFF,0xFF,0xF8,0x1F,0xF8,0x00,0x0F,0xFC,0x3F,0xF0,0x00,0x1F,0xF0,0x7F,0xC0,0x00,0x7F,0xE0,0x00,0x3E,0x00,0x0F,0xF8,0x00,0x07,0xFE,0x0F,0xFF,0xFF,0xFF,0xF0,0x3F,0xC0,0x00,0x03,0xFE,0x00,0x00,0x00,0xFF,0xFC,0x1F,0xF8,0x00,0x0F,0xF8,0x3F,0xF0,0x00,0x3F,0xF0,0x7F,0xC0,0x00,0x7F,0xE0,0x00,0x1F,0x00,0x0F,0xF8,0x00,0x03,0xFE,0x0F,0xFF,0xFF,0xFF,0xE0,0x3F,0xC0,0x00,0x03,0xF8,0x00,0x00,0x00,0x3F,0xFC,0x1F,0xF8,0x00,0x0F,0xF8,0x3F,0xE0,0x00,0x3F,0xF0,0x7F,0xC0,0x00,0x7F,0xC0,0x00,0x1F,0x00,0x0F,0xF8,0x00,0x03,0xFE,0x1F,0xFF,0xFF,0xFF,0xE0,0x3F,0xC0,0x00,0x03,0xF0,0x00,0x00,0x00,0x1F,0xFC,0x1F,0xF8,0x00,0x1F,0xF8,0x3F,0xE0,0x00,0x3F,0xE0,0x7F,0xC0,0x00,0x7F,0xC0,0x00,0x1F,0x00,0x0F,0xF0,0x00,0x03,0xFE,0x1F,0xFF,0xFF,0xFF,0xE0,0x3F,0x80,0x00,0x01,0xF0,0x00,0x00,0x00,0x0F,0xFC,0x1F,0xF8,0x00,0x1F,0xF0,0x3F,0xE0,0x00,0x3F,0xE0,0x7F,0xC0,0x00,0xFF,0xC0,0x00,0x0F,0x80,0x1F,0xF0,0x00,0x03,0xFE,0x1F,0xFF,0xFF,0xFF,0xE0,0x7F,0x80,0x00,0x01,0xF0,0x00,0x00,0x00,0x0F,0xFC,0x1F,0xF0,0x00,0x1F,0xF0,0x3F,0xE0,0x00,0x7F,0xE0,0x7F,0xC0,0x00,0xFF,0xC0,0x00,0x0F,0x80,0x1F,0xF0,0x00,0x03,0xFE,0x1F,0xFF,0xFF,0xFF,0xE0,0x7F,0x80,0x00,0x01,0xF0,0x00,0x00,0x00,0x0F,0xFC,0x1F,0xF0,0x00,0x3F,0xF0,0x3F,0xE0,0x00,0x7F,0xC0,0x7F,0xC0,0x00,0xFF,0x80,0x00,0x0F,0x80,0x1F,0xF0,0x00,0x07,0xFC,0x1F,0xF0,0x00,0x00,0x00,0x7F,0x80,0x00,0x00,0xF8,0x00,0x00,0x00,0x0F,0xFC,0x1F,0xF0,0x00,0x3F,0xE0,0x3F,0xE0,0x00,0xFF,0xC0,0x7F,0xC0,0x01,0xFF,0x80,0x00,0x07,0xC0,0x1F,0xE0,0x00,0x07,0xFC,0x1F,0xF0,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x1F,0xFC,0x1F,0xF8,0x00,0x7F,0xE0,0x3F,0xE0,0x00,0xFF,0xC0,0x7F,0xC0,0x01,0xFF,0x00,0x00,0x07,0xC0,0x3F,0xE0,0x00,0x0F,0xFC,0x1F,0xF0,0x00,0x0C,0x00,0xFF,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x1F,0xFC,0x1F,0xF8,0x00,0x7F,0xC0,0x3F,0xE0,0x01,0xFF,0x80,0x7F,0xC0,0x03,0xFF,0x00,0x00,0x07,0xC0,0x3F,0xE0,0x00,0x1F,0xF8,0x1F,0xF0,0x00,0x1E,0x00,0xFF,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x3F,0xF8,0x1F,0xF8,0x00,0xFF,0xC0,0x3F,0xF0,0x01,0xFF,0x80,0x7F,0xC0,0x03,0xFE,0x00,0x00,0x03,0xE0,0x3F,0xE0,0x00,0x3F,0xF8,0x1F,0xF0,0x00,0x7E,0x00,0xFF,0x0C,0x00,0x03,0xFC,0x00,0x00,0x00,0x7F,0xF8,0x1F,0xF8,0x01,0xFF,0x80,0x3F,0xF0,0x03,0xFF,0x00,0x7F,0xE0,0x07,0xFE,0x00,0x00,0x03,0xE0,0x3F,0xC0,0x01,0xFF,0xF0,0x1F,0xF8,0x01,0xFE,0x00,0xFF,0x1C,0x00,0x07,0xFC,0x07,0x00,0x00,0xFF,0xF0,0x0F,0xFC,0x03,0xFF,0x80,0x3F,0xF8,0x07,0xFF,0x00,0x7F,0xF0,0x0F,0xFC,0x00,0x00,0x03,0xE0,0x7F,0xC0,0x0F,0xFF,0xE0,0x1F,0xFC,0x07,0xFF,0x00,0xFF,0xFE,0x00,0x0F,0x3C,0x07,0xE0,0x07,0xFF,0xF0,0x0F,0xFE,0x07,0xFF,0x00,0x1F,0xFC,0x0F,0xFE,0x00,0x3F,0xF8,0x1F,0xFC,0x00,0x00,0x01,0xF0,0x7F,0xFF,0xFF,0xFF,0xC0,0x0F,0xFF,0xFF,0xFF,0x00,0xFF,0xFE,0x00,0x1C,0x3E,0x07,0xFF,0xFF,0xFF,0xE0,0x0F,0xFF,0xFF,0xFE,0x00,0x1F,0xFF,0xFF,0xFC,0x00,0x3F,0xFF,0xFF,0xF8,0x00,0x00,0x01,0xF0,0x7F,0xFF,0xFF,0xFF,0x80,0x0F,0xFF,0xFF,0xFF,0x00,0xFF,0xFE,0x00,0x38,0x3E,0x07,0xFF,0xFF,0xFF,0xC0,0x07,0xFF,0xFF,0xFE,0x00,0x0F,0xFF,0xFF,0xF8,0x00,0x3F,0xFF,0xFF,0xF0,0x00,0x00,0x01,0xF0,0x7F,0xFF,0xFF,0xFF,0x00,0x07,0xFF,0xFF,0xFE,0x00,0xFF,0xFE,0x00,0x70,0x3E,0x0F,0xFF,0xFF,0xFF,0x80,0x03,0xFF,0xFF,0xFC,0x00,0x0F,0xFF,0xFF,0xF0,0x00,0x1F,0xFF,0xFF,0xE0,0x00,0x00,0x03,0xF8,0xFF,0xFF,0xFF,0xFE,0x00,0x07,0xFF,0xFF,0xF8,0x00,0x7F,0xFE,0x00,0x60,0x3E,0x0F,0xFF,0xFF,0xFF,0x00,0x03,0xFF,0xFF,0xF8,0x00,0x07,0xFF,0xFF,0xE0,0x00,0x0F,0xFF,0xFF,0xC0,0x00,0x00,0x0F,0xF8,0xFF,0xFF,0xFF,0xF8,0x00,0x03,0xFF,0xFF,0xF0,0x00,0x7F,0xFE,0x00,0xE0,0x3E,0x0F,0xFF,0xFF,0xFC,0x00,0x01,0xFF,0xFF,0xE0,0x00,0x03,0xFF,0xFF,0xC0,0x00,0x07,0xFF,0xFF,0x80,0x00,0x00,0x3F,0xF8,0xFF,0xFF,0xFF,0xC0,0x00,0x01,0xFF,0xFF,0xC0,0x00,0x3F,0xFC,0x00,0xC0,0x3E,0x0F,0xFF,0xFF,0xF0,0x00,0x00,0xFF,0xFF,0xC0,0x00,0x01,0xFF,0xFF,0x00,0x00,0x03,0xFF,0xFE,0x00,0x00,0x00,0xFF,0xFC,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x7F,0xFF,0x00,0x00,0x1F,0xF0,0x01,0xC0,0x3E,0x01,0xFF,0xFF,0xC0,0x00,0x00,0x3F,0xFE,0x00,0x00,0x00,0x7F,0xFC,0x00,0x00,0x00,0xFF,0xF8,0x00,0x00,0x01,0xFF,0xFC,0x1F,0xFF,0xE0,0x00,0x00,0x00,0x0F,0xF0,0x00,0x00,0x07,0x80,0x01,0x80,0x3E,0x00,0x07,0xF0,0x00,0x00,0x00,0x07,0xF0,0x00,0x00,0x00,0x0F,0xE0,0x00,0x00,0x00,0x1F,0x80,0x00,0x00,0x03,0xFE,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x80,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xF8,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xF0,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xF0,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFC,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0x9F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x80,0x00,0x03,0x07,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFE,0x00,0x00,0x03,0x3F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x00,0x00,0x03,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0x80,0x00,0x00,0x07,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x3F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x01,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x0F,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x07,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFE,0x00,0x00,0x00,0x00,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0x80,0x00,0x00,0x00,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x1F,0xC0,0x00,0x00,0x07,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x03,0xF0,0x00,0x00,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0xF8,0x00,0x00,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x3C,0x00,0x03,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x1E,0x00,0x0F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x0F,0x00,0x7F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x80,0x00,0x07,0x81,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x80,0x00,0x03,0xC7,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xC0,0x00,0x01,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x01,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,0x00,0x03,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xF0,0x00,0x0F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFC,0x00,0x7F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
                                   ,0x1B,0x45,0x00,0x0A,0x1B,0x61,0x01,0x1D,0x21,0x00,0x56,0x65,0x72,0x6D,0x69,0x74,0x74,0x6C,0x75,0x6E,0x67,0x73,0x73,0x74,0x65,0x6C,0x6C,0x65,0x0A,0x57,0x65,0x74,0x74,0x68,0x61,0x6C,0x74,0x65,0x72,0x3A,0x20,0x74,0x65,0x73,0x74,0x0A   ///Vermitt...
                                   ,0x1B,0x61,0x00,0x1D,0x21,0x11,0x1B,0x61,0x01,0x1B,0x45,0x01,0x1B,0x4D,0x00,0x57,0x65,0x74,0x74,0x73,0x63,0x68,0x65,0x69,0x6E,0x1B,0x4D,0x01,0x1B,0x61,0x00,0x1B,0x45,0x00,0x0A,0x31,0x35,0x38,0x32,0x31,0x33,0x30,0x38,0x31,0x20,0x28,0x62,0x61,0x72,0x62,0x69,0x6E,0x67,0x74,0x65,0x73,0x74,0x29,0x0A  //Wett..158..
                                   ,0x1D,0x21,0x11,0x1D,0x42,0x01,0x20,0x2A,0x44,0x55,0x50,0x4C,0x49,0x4B,0x41,0x54,0x2A,0x20,0x1B,0x4D,0x01,0x1D,0x42,0x00,0x0A
                                   ,0x1D,0x4C,0x1E,0x00,0x1D,0x21,0x00,0x1B,0x45,0x01,0x1B,0x61,0x00,0x1B,0x2D,0x02,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1B,0x2D,0x00,0x1B,0x45,0x00,0x0A
                                   ,0x1B,0x61,0x00,0x54,0x79,0x70,0x3A,0x20,0x31,0x20,0x45,0x69,0x6E,0x7A,0x65,0x6C,0x77,0x65,0x74,0x74,0x65,0x0A
                                   ,0x1D,0x4C,0x1E,0x00,0x1D,0x21,0x00,0x1B,0x45,0x01,0x1B,0x61,0x00,0x1B,0x2D,0x02,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1B,0x2D,0x00,0x1B,0x45,0x00,0x0A
                                   ,0x1B,0x61,0x00,0x1D,0x21,0x00,0x1B,0x45,0x01,0x31,0x38,0x39,0x1B,0x24,0x4D,0x00,0x1B,0x45,0x01,0x52,0x57,0x20,0x45,0x72,0x66,0x75,0x72,0x74,0x0A
                                   ,0x1B,0x45,0x00,0x30,0x34,0x2F,0x30,0x32,0x1B,0x24,0x4D,0x00,0x1B,0x45,0x01,0x46,0x53,0x56,0x20,0x5A,0x77,0x69,0x63,0x6B,0x61,0x75,0x0A
                                   ,0x1B,0x45,0x00,0x31,0x34,0x3A,0x30,0x30,0x1B,0x24,0x4D,0x00,0x4E,0x54,0x20,0x30,0x3A,0x33,0x1B,0x24,0x4B,0x01,0x1B,0x45,0x01,0x31,0x1B,0x45,0x00,0x1B,0x24,0xAF,0x01,0x31,0x31,0x2E,0x30,0x30,0x0A
                                   //,0x1B,0x61,0x02  update
                                   //,0x56,0x65,0x72,0x6C,0x6F,0x72,0x65,0x6E,0x0A
                                    ,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
                                    ,0x56,0x65,0x72,0x6C,0x6F,0x72,0x65,0x6E,0x0A

                                   ,0x1B,0x61,0x00,0x1D,0x4C,0x1E,0x00,0x1D,0x21,0x00,0x1B,0x45,0x01,0x1B,0x61,0x00,0x1B,0x2D,0x02,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1B,0x2D,0x00,0x1B,0x45,0x00,0x0A
                                   ,0x1D,0x4C,0x1E,0x00,0x1B,0x61,0x00,0x1D,0x21,0x00,0x57,0x65,0x74,0x74,0x65,0x69,0x6E,0x73,0x61,0x74,0x7A,0x3A,0x1B,0x24,0x9D,0x01,0x39,0x35,0x2C,0x32,0x34,0x20,0x80,0x0A
                                   ,0x47,0x65,0x62,0xFC,0x68,0x72,0x3A,0x1B,0x24,0xA6,0x01,0x34,0x2C,0x37,0x36,0x20,0x80,0x0A
                                   ,0x41,0x6E,0x7A,0x61,0x68,0x6C,0x20,0x57,0x65,0x74,0x74,0x65,0x6E,0x3A,0x1B,0x24,0xD3,0x01,0x31,0x0A
                                   ,0x1B,0x4D,0x01,0x1D,0x21,0x11,0x1B,0x45,0x01,0x47,0x65,0x73,0x61,0x6D,0x74,0x62,0x65,0x74,0x72,0x61,0x67,0x3A,0x1B,0x24,0x4C,0x01,0x31,0x30,0x30,0x2C,0x30,0x30,0x20,0x80,0x1B,0x61,0x00,0x0A
                                   ,0x47,0x65,0x77,0x69,0x6E,0x6E,0x63,0x68,0x61,0x6E,0x63,0x65,0x3A,0x1B,0x24,0x70,0x01,0x30,0x2C,0x30,0x30,0x20,0x80,0x1B,0x45,0x00,0x1B,0x61,0x00,0x1D,0x21,0x00,0x0A
                                   ,0x1D,0x4C,0x1E,0x00,0x1D,0x21,0x00,0x1B,0x45,0x01,0x1B,0x61,0x00,0x1B,0x2D,0x02,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1B,0x2D,0x00,0x1B,0x45,0x00,0x0A
                                   ,0x1B,0x61,0x00,0x1D,0x21,0x00,0x41,0x62,0x67,0x61,0x62,0x65,0x7A,0x65,0x69,0x74,0x3A,0x20,0x30,0x34,0x2F,0x30,0x32,0x2F,0x32,0x30,0x31,0x38,0x20,0x31,0x35,0x3A,0x35,0x33,0x3A,0x32,0x31,0x0A
                                 
                                   //1DBar begin  update
                                   ,0x1B,0x61,0x01
                                   ,0x1d,0x77,0x02,0x1d,0x68,0x64,0x1d,0x66,0x00,0x1d,0x48,0x02,0x1d,0x6b,0x04,0x31,0x30,0x30,0x31,0x35,0x38,0x32,0x31,0x33,0x30,0x38,0x31,0x00
                              //   ,0x1D,0x77,0x01,0x1D,0x68,0x64 ,0x1D,0x48,0x02,0x1D,0x66,0x00,0x1D,0x70,0x01,0x1D,0x6B,0x04,0x2A,0x31,0x30,0x30,0x31,0x35,0x38,0x32,0x31,0x33,0x30,0x38,0x31,0x2A,0x00,0x0A
                                   //1DBar end
                                   ,0x1B,0x61,0x01,0x1D,0x21,0x00,0x57,0x65,0x74,0x74,0x68,0x61,0x6C,0x74,0x65,0x72,0x3A,0x20,0x49,0x42,0x41,0x20,0x45,0x6E,0x74,0x65,0x72,0x74,0x61,0x69,0x6E,0x6D,0x65,0x6E,0x74,0x20,0x4C,0x74,0x64,0x2E,0x20,0x32,0x6E,0x64,0x20,0x46,0x6C,0x6F,0x6F,0x72,0x20,0x6F,0x66,0x20,0x4D,0x65,0x6C,0x69,0x74,0x61,0x20,0x43,0x6F,0x75,0x72,0x74,0x20,0x32,0x2C,0x20,0x47,0x69,0x75,0x73,0x65,0x70,0x70,0x65,0x20,0x43,0x61,0x6C,0x69,0x20,0x53,0x74,0x72,0x65,0x65,0x74,0x20,0x54,0x61,0x27,0x58,0x62,0x69,0x65,0x78,0x20,0x58,0x42,0x58,0x31,0x33,0x32,0x34,0x20,0x4D,0x61,0x6C,0x74,0x61,0x0A,0x1B,0x61,0x00,0x1D,0x4C,0x1E,0x00,0x1B,0x61,0x00,0x1D,0x21,0x00,0x45,0x73,0x20,0x67,0x65,0x6C,0x74,0x65,0x6E,0x20,0x64,0x69,0x65,0x20,0x61,0x75,0x73,0x67,0x65,0x68,0xE4,0x6E,0x67,0x74,0x65,0x6E,0x20,0x57,0x65,0x74,0x74,0x62,0x65,0x73,0x74,0x69,0x6D,0x6D,0x75,0x6E,0x67,0x65,0x6E,0x20,0x6D,0x69,0x74,0x20,0x64,0x65,0x6D,0x20,0x6A,0x65,0x77,0x65,0x69,0x6C,0x73,0x20,0x61,0x6B,0x74,0x75,0x65,0x6C,0x6C,0x65,0x6E,0x20,0x53,0x74,0x61,0x6E,0x64,0x2E,0x0A,0x42,0x69,0x74,0x74,0x65,0x20,0xFC,0x62,0x65,0x72,0x70,0x72,0xFC,0x66,0x65,0x6E,0x20,0x53,0x69,0x65,0x20,0x49,0x68,0x72,0x20,0x57,0x65,0x74,0x74,0x76,0x65,0x72,0x68,0x61,0x6C,0x74,0x65,0x6E,0x21,0x0A,0x53,0x75,0x63,0x68,0x74,0x67,0x65,0x66,0x61,0x68,0x72,0x21,0x0A,0x0A,0x0A,0x0A,0x0A,0x1B,0x69,0x1B,0x40
                               };

             
                    PrintTransmit(bSendData, bSendData.Length);

 
        }

        private void Ep802_PageMode_Star()
        {
            /*Use EPOS Command*/
            byte[] bSendData = {0x1b,0x40   //SetClean
                                   ,0x1b,0x79,0x03  //Enter EPOS Mode
                                   ,0x1b,0x61,0x01  //SetAlignment
                                   ,0x54,0x49,0x43,0x4b,0x45,0x54,0x20,0x50,0x41,0x47,0x4f,0x20,0x45,0x4c,0x45,0x43,0x54,0x52,0x4f,0x4e,0x49,0x43,0x4f,0x0a    //PrintString
                                    ,0x54,0x45,0x53,0x54,0x0a
                                    ,0x1b,0x64,0x02     //PrintFeedline
                                    ,0x1b,0x47,0x01     //SetBold
                                    ,0x50,0x61,0x67,0x6f,0x20,0x45,0x6c,0x65,0x63,0x74,0x72,0x6f,0x6e,0x69,0x63,0x6f,0x20,0x31,0x30,0x30,0x2c,0x30,0x30,0x20,0x80,0x0a
                                    ,0x1b,0x64,0x02     //PrintFeedline
                                    ,0x11,0x21,0x11,0x23,0x02,0x40,0x02,0x80    //SetPagemode
                                    ,0x11,0x25,0x03 //SetPagedirection
                                    ,0x1b,0x21,0x31 //SetSizechar
                                    ,0x1b,0x20,0x02 //SetSpacechar
                                    ,0x11,0x24,0x00,0x00,0x00,0x14 //SetPagestartposition
                                    ,0x53,0x54,0x41,0x52,0x20,0x52,0x4f,0x55,0x4c,0x45,0x54,0x54,0x45,0x20,0x20,0x2d,0x20,0x54,0x49,0x43,0x4b,0x45,0x54,0x20,0x54,0x45,0x53,0x54,0x0a
                                    ,0x1b,0x21,0x01 //SetSizechar
                                    ,0x11,0x24,0x00,0x78,0x00,0x64//SetPagestartposition
                                    ,0x49,0x64,0x2e,0x20,0x43,0x6c,0x69,0x65,0x6e,0x74,0x65,0x20,0x2d,0x20,0x50,0x75,0x65,0x73,0x74,0x6f,0x20,0x31,0x0a
                                    ,0x11,0x24,0x00,0x64,0x00,0x78  //SetPagestartposition
                                    ,0x43,0x6f,0x64,0x69,0x67,0x6f,0x20,0x54,0x69,0x63,0x6b,0x65,0x74,0x3a,0x20,0x30,0x30,0x31,0x20,0x49,0x64,0x3a,0x20,0x30,0x30,0x30,0x32,0x0a
                                    ,0x11,0x24,0x00,0x50,0x00,0x8c  //SetPagestartposition
                                    ,0x46,0x65,0x63,0x68,0x61,0x3a,0x32,0x36,0x2d,0x30,0x37,0x2d,0x32,0x30,0x31,0x38,0x20,0x48,0x6f,0x72,0x61,0x3a,0x30,0x30,0x3a,0x30,0x30,0x3a,0x30,0x30,0x0a
                                    ,0x11,0x24,0x00,0x14,0x00,0xc8  //SetPagestartposition
                                    ,0x1d,0x77,0x04,0x1d,0x68,0x8c,0x1d,0x66,0x00,0x1d,0x48,0x02,0x1d,0x6b,0x05,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x00   //Print1Dbar
                                    ,0x1b,0x21,0x21 //SetSizechar
                                    ,0x1b,0x20,0x00 //SetSpacechar
                                    ,0x11,0x24,0x00,0x78,0x01,0x90  //SetPagestartposition
                                    ,0x54,0x49,0x43,0x4b,0x45,0x54,0x20,0x44,0x45,0x20,0x50,0x41,0x47,0x4f,0x0a
                                    ,0x11,0x24,0x00,0x50,0x01,0xb8
                                    ,0x50,0x41,0x47,0x4f,0x20,0x45,0x4c,0x45,0x43,0x54,0x52,0x4f,0x4e,0x49,0x43,0x4f,0x20,0x44,0x45,0x20,0x20,0x31,0x30,0x30,0x2c,0x30,0x30,0x20,0x80,0x0a
                                    ,0x1b,0x64,0x01 //PrintFeedline
                                    ,0x11,0x0c
                                    ,0x11,0x22 
                                    ,0x1b,0x64,0x03
                                    ,0x1b,0x61,0x01
                                    ,0x1b,0x47,0x00
                                    ,0x1b,0x21,0x00
                                    ,0x49,0x6e,0x66,0x6f,0x20,0x23,0x4e,0x4f,0x20,0x56,0x41,0x4c,0x49,0x44,0x30,0x23,0x0A
                                    ,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,0x78,0x20,0x30,0x30,0x31,0x0A
                                    ,0x1b,0x64,0x06
                                    ,0x1b,0x6d};

      
            PrintTransmit(bSendData, bSendData.Length);

            PrintFeedline(10);
            /*USE SDK*/
            SetClean();
            SetCommandmode(3);
            SetAlignment(1);
            PrintString(new StringBuilder("TICKET PAGO ELECTRONICO"), 0);
            PrintString(new StringBuilder("TEST"), 0);
            PrintFeedline(2);
            SetBold(1);
            PrintString(new StringBuilder("Pago Electronico 100,00 €"), 0);
            PrintFeedline(2); 

            SetPagemode(1, 576, 640);
            SetPagedirection(3);

            SetSizechar(1, 2, 0, 1);
            SetSpacechar(2);
            SetPagestartposition(0, 20);
            m_sbData = new StringBuilder("STAR ROULETTE  - TICKET TEST");
            PrintString(m_sbData, 0);

            SetSizechar(0, 0, 0, 1);
            SetPagestartposition(120, 100);
            m_sbData = new StringBuilder("Id. Cliente - Puesto 1");
            PrintString(m_sbData, 0);

            SetPagestartposition(100, 120);
            m_sbData = new StringBuilder("Codigo Ticket: 001 Id: 0002");
            PrintString(m_sbData, 0);

            SetPagestartposition(80, 140);
            m_sbData = new StringBuilder("Fecha:26-07-2018 Hora:00:00:00");
            PrintString(m_sbData, 0);

            SetPagestartposition(20, 200);
            m_sbData = new StringBuilder("123456789012345678");
            Print1Dbar(4, 140, 0, 2, 5, m_sbData);

            SetSizechar(0, 1, 0, 1);
            SetSpacechar(0);
            SetPagestartposition(120, 400);
            m_sbData = new StringBuilder("TICKET DE PAGO");
            PrintString(m_sbData, 0);
            SetPagestartposition(80, 440);
            m_sbData = new StringBuilder("PAGO ELECTRONICO DE  100,00 €");
            PrintString(m_sbData, 0);  
            PrintFeedline(1);
            PrintPagedata();
            SetPagemode(0, 576, 640);
            PrintFeedline(3);
            SetAlignment(1);
            SetBold(0);
            SetSizechar(0, 0, 0, 0);
            PrintString(new StringBuilder("Info #NO VALID0#"), 0);
            PrintString(new StringBuilder("Current index 001"), 0);
            PrintFeedline(6);
            PrintCutpaper(0);
             
        }

        private void button4_Click(object sender, EventArgs e)
        {
            try{
                OpenFileDialog openFileDialog = new OpenFileDialog();
                //openFileDialog.InitialDirectory = "c:\\";//注意这里写路径时要用c:\\而不是c:\
                openFileDialog.Filter = "BMP File|*.bmp|PDF File|*.pdf";
                openFileDialog.RestoreDirectory = true;
                openFileDialog.FilterIndex = 1;
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    textBox2.Text = openFileDialog.FileName;
                    StringBuilder sbData = new StringBuilder(textBox2.Text);
                    if (sbData.ToString().ToLower().EndsWith(".pdf"))
                    {
                        PrintFeedDot(120);
                        PrintFeedDot(120);
                        SetLinespace(50);
                        PrintPDF_CCCB(sbData);
                        PrintMarkcutpaper(0);
                    }
                    else
                    {
                        for (int iIndex = 0; iIndex < 1; iIndex++)
                        {
                            PrintDiskimgfile(sbData);

                        }
                        PrintFeedDot(150);
                        PrintCutpaper(0);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }

        }

        private void btnPrint_Click(object sender, EventArgs e)
        {
            try
            {
                string strSDKFunction = cboSDKFunction.SelectedItem.ToString() + "Demo";

                PrintFeedDot(20);
                m_sbData = new StringBuilder(cboSDKFunction.SelectedItem.ToString() + " Demo:");
                PrintString(m_sbData, 0);  
 
                Type type = Type.GetType("Msprintcsharp.Form1"); 
                MethodInfo method = type.GetMethod(strSDKFunction); 
                object obj = Activator.CreateInstance(type); 
                method.Invoke(obj, null); 

                SetClean();
                SetCommandmode(3);
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation); 
            }  

        }

        public void PrintStringDemo()
        {
            m_sbData = new StringBuilder("PrintString(sbData,1)");
            PrintString(m_sbData, 1);
            m_sbData = new StringBuilder("PrintString(sbData,1)");
            PrintString(m_sbData, 1);
            m_sbData = new StringBuilder("PrintString(sbData,0)");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("PrintString(sbData,0)");
            PrintString(m_sbData, 0);
        }

        public void PrintCutpaperDemo()
        {
            m_sbData = new StringBuilder("PrintCutpaper(0)");
            PrintString(m_sbData, 0);
            PrintFeedDot(250);
            PrintCutpaper(0);

            m_sbData = new StringBuilder("PrintCutpaper(1)");
            PrintString(m_sbData, 0);
            PrintFeedDot(250);
            PrintFeedDot(250);
            PrintCutpaper(1);
 
        }

        public void PrintChargeRowDemo()
        {
            m_sbData = new StringBuilder("PrintChargeRow()");
            PrintString(m_sbData, 1); 
            PrintChargeRow();  
        }

        public void PrintFeedDotDemo()
        {
            m_sbData = new StringBuilder("PrintFeedDot(30)"); 
            PrintFeedDot(30);  
        }
        public void PrintSelfcheckDemo()
        {
            PrintSelfcheck();
        }

        public void SetLinespaceDemo()
        {
            m_sbData = new StringBuilder("SetLinespace(30)");
            SetLinespace(30);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetLinespace(45)");
            SetLinespace(45);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetLinespace(60)");
            SetLinespace(60);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            //SetClean();
            //SetCommandmode(3);
        }

        public void SetSpacecharDemo()
        {
            m_sbData = new StringBuilder("SetSpacechar(5)");
            SetSpacechar(5);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSpacechar(10)");
            SetSpacechar(10);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSpacechar(15)");
            SetSpacechar(15);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            PrintString(m_sbData, 0);
            //SetClean();
            //SetCommandmode(3);
        }

        public void SetLeftmarginDemo()
        {
            m_sbData = new StringBuilder("SetLeftmargin(5)");
            SetLeftmargin(10);
            PrintString(m_sbData, 0); 
            m_sbData = new StringBuilder("SetLeftmargin(10)");
            SetLeftmargin(20);
            PrintString(m_sbData, 0); 
            m_sbData = new StringBuilder("SetLeftmargin(15)");
            SetLeftmargin(30);
            PrintString(m_sbData, 0); 
            //SetClean();
            //SetCommandmode(3);
        }

        public void SetSizecharDemo()
        {
            m_sbData = new StringBuilder("SetSizechar(0,0,0,0)");
            SetSizechar(0, 0, 0, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizechar(1,1,0,0)");
            SetSizechar(1, 1, 0, 0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizechar(1,1,1,1)");
            SetSizechar(1, 1, 1, 1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizechar(1,0,0,0)");
            SetSizechar(1, 0, 0, 0);
            PrintString(m_sbData, 0);

            //SetClean();
            //SetCommandmode(3);
        }
        
        public void SetSizetextDemo()
        {
            m_sbData = new StringBuilder("SetSizetext(1,1)");
            SetSizetext(1, 1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizetext(2,2)");
            SetSizetext(2, 2);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizetext(3,3)");
            SetSizetext(3, 3);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetSizetext(4,3)");
            SetSizetext(4, 3);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetAlignmentDemo()
        {
            m_sbData = new StringBuilder("SetAlignment(0)");
            SetAlignment(0);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetAlignment(1)");
            SetAlignment(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetAlignment(2)");
            SetAlignment(2);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetAlignmentLeftRightDemo()
        {
            m_sbData = new StringBuilder("SetAlignmentLeft");
            SetAlignmentLeftRight(0);
            PrintString(m_sbData, 1);
            m_sbData = new StringBuilder("SetAlignmentRight");
            SetAlignmentLeftRight(2);
            PrintString(m_sbData, 0);  

            SetClean();
            SetCommandmode(3);
        }

        public void SetBoldDemo()
        {
            m_sbData = new StringBuilder("SetBold(1)");
            SetBold(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetBold(0)");
            SetBold(0);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetRotateDemo()
        {
            m_sbData = new StringBuilder("SetRotate(1)");
            SetRotate(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetRotate(0)");
            SetRotate(0);
            PrintString(m_sbData, 0); 

            SetClean();
            SetCommandmode(3); 
        }

        public void SetDirectionDemo()
        {
            m_sbData = new StringBuilder("SetDirection(1)");
            SetDirection(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetDirection(0)");
            SetDirection(0);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetWhitemodelDemo()
        {
            m_sbData = new StringBuilder("SetWhitemodel(1)");
            SetWhitemodel(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetWhitemodel(0)");
            SetWhitemodel(0);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetItalicDemo()
        {            
            m_sbData = new StringBuilder("SetItalic(1)");
            SetItalic(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetItalic(0)");
            SetItalic(0);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetUnderlineDemo()
        {
            m_sbData = new StringBuilder("SetUnderline(2)");
            SetUnderline(2);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetUnderline(1)");
            SetUnderline(1);
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("SetUnderline(0)");
            SetUnderline(0);
            PrintString(m_sbData, 0); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void SetHTseatDemo()
        {
            m_sbData = new StringBuilder("1");
                
            byte[] bByte = new byte[3];
            bByte[0] = 10;
            bByte[1] = 18;
            bByte[2] = 25; 
	        SetHTseat(bByte,3);
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("2");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("3");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("4");
	        PrintString(m_sbData,0);

            m_sbData = new StringBuilder("1a");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("2a");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("3a");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("4a");
	        PrintString(m_sbData,0); 

            m_sbData = new StringBuilder("1b");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("2b");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("3b");
	        PrintString(m_sbData,1);
	        PrintNextHT();
            m_sbData = new StringBuilder("4b"); 
	        PrintString(m_sbData,0); 


            //SetClean();
            //SetCommandmode(3);
        }

        public void PrintQrcodeDemo()
        {
            m_sbData = new StringBuilder("QR Code:123456");
           // PrintString(m_sbData, 0);
            //PrintQrcode(m_sbData, 2, 6, 0);
            //PrintFeedDot(30); 
         
            PrintQrcode(m_sbData, 27, 6, 1);

            SetLeftmargin(10);
            m_sbData = new StringBuilder("QR Code:");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("123456");
            PrintString(m_sbData, 0);
            PrintRemainQR(); 

            //SetClean();
            //SetCommandmode(3);
        }

        public void PrintDataMatrixDemo()
        {
            m_sbData = new StringBuilder("DataMatrix");
 
            PrintDataMatrix(m_sbData, 6);  
        }

        public void Print1DbarDemo()
        {
            m_sbData = new StringBuilder("UPC-A");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            Print1Dbar(4, 72, 0, 1, 0, m_sbData);
            PrintFeedDot(30);

            //UPC-E Unsuccessful 
            m_sbData = new StringBuilder("UPC-E");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("012345678912");
            Print1Dbar(3, 72, 0, 1, 1, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("EAN-13");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("1234567890123");
            Print1Dbar(3, 72, 0, 1, 2, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("EAN-8");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            Print1Dbar(3, 72, 0, 1, 3, m_sbData);
            PrintFeedDot(30);

            //CODE39  
            m_sbData = new StringBuilder("CODE39");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            Print1Dbar(4, 72, 0, 1, 4, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("ITF");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            Print1Dbar(4, 72, 0, 1, 5, m_sbData);
            PrintFeedDot(30);
            m_sbData = new StringBuilder("ITF 120600010007409577");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("120600010007409577");
            Print1Dbar(3, 120, 0, 1, 5, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("CODABAR");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("A123456B");
            Print1Dbar(4, 72, 0, 1, 6, m_sbData);
            PrintFeedDot(30);

            //Unsuccessful 
            m_sbData = new StringBuilder("Standard EAN13");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("01234561");
            Print1Dbar(4, 72, 0, 1, 7, m_sbData);
            PrintFeedDot(30);

            //Unsuccessful 
            m_sbData = new StringBuilder("Standard EAN8");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            Print1Dbar(4, 72, 0, 1, 8, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("CODE93");
            PrintString(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            Print1Dbar(4, 72, 0, 1, 9, m_sbData);
            PrintFeedDot(30);

            m_sbData = new StringBuilder("CODE128");
            PrintString(m_sbData, 0);
            //m_sbData = new StringBuilder("12345678901234567890123456789012345678901234");
            m_sbData = new StringBuilder("A123456789012345678901234");
            Print1Dbar(2, 72, 2, 1, 10, m_sbData);
            PrintFeedDot(30);

            PrintFeedDot(90); 

            PrintCutpaper(1);
            //SetClean();
            //SetCommandmode(3);
        }

        public void SetCodepageDemo()
        {
            //m_sbData = new StringBuilder("č ě ň ř š ů ý ž");
        
            //Print č ě ň ř š ů ý ž
            //PC852
            SetCodepage(0, 18); 

            byte[] bByte = new byte[128];
            int iIndex = 0; 
            bByte[iIndex++] = 0x9F;
            bByte[iIndex++] = 0xD8;
            bByte[iIndex++] = 0xE5;
            bByte[iIndex++] = 0xFD;
            bByte[iIndex++] = 0xE7;
            bByte[iIndex++] = 0x85;
            bByte[iIndex++] = 0xEC;
            bByte[iIndex++] = 0xA7; 
            PrintTransmit(bByte, iIndex);
            PrintChargeRow();

            SetClean();
            SetCommandmode(3);

            //Print $ € ¢ £ ¥
            //WPC1252
            SetCodepage(5, 16);
            m_sbData = new StringBuilder("$ € ¢ £ ¥");
            PrintString(m_sbData, 0);
            SetClean();
            SetCommandmode(3);
        }

        public void SetPagemodeDemo()
        {
            SetClean();
            SetCommandmode(3);
            m_sbData = new StringBuilder("SetTop");
            PrintString(m_sbData, 0);
            PrintFeedDot(40);

            SetPagemode(1, 576, 640);
            SetPagestartposition(0, 0); 
            SetPagedirection(0);
            m_sbData = new StringBuilder("000000000073751872");  
            PrintString(m_sbData, 0);


            PrintFeedDot(20);
            PrintString(m_sbData, 0); 

            SetPagedirection(1);
            SetPagestartposition(80, 60); 
            m_sbData = new StringBuilder("000000000073751872");
     //       Print1Dbar(3, 100, 0, 1, 5, m_sbData);
/*
            m_sbData = new StringBuilder("SetAlignmentLeft");
            SetAlignmentLeftRight(0);
            PrintString(m_sbData, 1);
            m_sbData = new StringBuilder("SetAlignmentRight");
            SetAlignmentLeftRight(2);
            PrintString(m_sbData, 0);
            PrintFeedDot(40);


            m_sbData = new StringBuilder("SetPagemode(1,576,640)"); 
            PrintString(m_sbData, 0);
            SetSizetext(2, 1);
            PrintFeedDot(20);
            PrintString(m_sbData, 0);
            PrintFeedDot(20);

            m_sbData = new StringBuilder("Print1Dbar");
           // Print1Dbar(3, 60, 0, 1, 10, m_sbData);
            //PrintFeedDot(20);
*/

            //SetPagedirection(2);
      /*      SetPagestartposition(0, 600);
            m_sbData = new StringBuilder("SetAlignmentLeft");
            SetAlignmentLeftRight(0);
            PrintString(m_sbData, 1);
            m_sbData = new StringBuilder("SetAlignmentRight");
            SetAlignmentLeftRight(2);
            PrintString(m_sbData, 0);
            PrintFeedDot(40);
            */
            PrintPagedata();
            SetPagemode(0, 576, 640);
             

            SetClean();
            SetCommandmode(3);
            
            m_sbData = new StringBuilder("bottom");
            PrintString(m_sbData, 0);
            PrintFeedDot(120);
            
            PrintCutpaper(1);
        }

        public void RotationDemo()
        {

            //*
        //  SetCommandmode(3);
          SetRotation_Intomode();
          
     //m_sbData = new StringBuilder("ITF 120600010007409577");
     //PrintRotation_Sendtext(m_sbData, 0);
     //m_sbData = new StringBuilder("iWidth = 6");
     //PrintRotation_Sendtext(m_sbData, 0);
     //m_sbData = new StringBuilder("120600010007409577");
     //PrintRotation_Sendcode(0, 6, 3, 5, m_sbData);
     //PrintRotation_Changeline();
     //PrintRotation_Changeline();

     //m_sbData = new StringBuilder("iWidth = 5");
     //PrintRotation_Sendtext(m_sbData, 0);
     //m_sbData = new StringBuilder("123456789012");
     //PrintRotation_Sendcode(0, 5, 3, 5, m_sbData);
     //PrintRotation_Changeline();
     //PrintRotation_Changeline();


     //m_sbData = new StringBuilder("iWidth = 4");
     //PrintRotation_Sendtext(m_sbData, 0);
     //m_sbData = new StringBuilder("120600010007409577");
     //PrintRotation_Sendcode(0, 4, 3, 5, m_sbData);
     //PrintRotation_Changeline();

     m_sbData = new StringBuilder("iWidth = 3");
     PrintRotation_Sendtext(m_sbData, 0);
     m_sbData = new StringBuilder("120600010007409577");
     PrintRotation_Sendcode(0, 3, 3, 5, m_sbData);
     PrintRotation_Changeline();

     PrintRotation_Changeline();
     PrintRotation_Data();
     return;
       
     m_sbData = new StringBuilder("123456789012");
     Print1Dbar(4, 72, 0, 1, 5, m_sbData);
     PrintFeedDot(90);
     PrintCutpaper(1);
     return; 
    // */

            SetCommandmode(3);
            SetRotation_Intomode();
            SetRotation_Leftspace(0);
            SetAlignment(0);
            SetSizechar(1, 1, 0, 0);
            m_sbData = new StringBuilder("UPC-A");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012"); 
            PrintRotation_Sendcode(0, 4, 3, 0, m_sbData);
            PrintRotation_Changeline();
           
            //UPC-E Unsuccessful 
            m_sbData = new StringBuilder("UPC-E");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("01234561");
            Print1Dbar(3, 40, 0, 1, 1, m_sbData);
            PrintRotation_Sendcode(0, 4, 3, 1, m_sbData);
            PrintRotation_Changeline();

            m_sbData = new StringBuilder("EAN-13");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            PrintRotation_Sendcode(0, 4, 3, 2, m_sbData);
            PrintRotation_Changeline();

            m_sbData = new StringBuilder("EAN-8");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("1234567");
            PrintRotation_Sendcode(0, 4, 3, 3, m_sbData);
            PrintRotation_Changeline();
            PrintRotation_Data();

            PrintFeedDot(20);
            SetRotation_Intomode();
            m_sbData = new StringBuilder("CODE39");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            PrintRotation_Sendcode(0, 4, 3, 4, m_sbData);
            PrintRotation_Changeline();


            m_sbData = new StringBuilder("ITF");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            PrintRotation_Sendcode(0, 4, 3, 5, m_sbData);
            PrintRotation_Changeline();

            m_sbData = new StringBuilder("CODABAR");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("A123456B");
            PrintRotation_Sendcode(0, 4, 3, 6, m_sbData);
            PrintRotation_Changeline();
            PrintRotation_Data();

            PrintFeedDot(20);
            SetRotation_Intomode();

            m_sbData = new StringBuilder("CODE93");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            PrintRotation_Sendcode(0, 4, 3, 9, m_sbData);
            PrintRotation_Changeline();
            m_sbData = new StringBuilder("iWidth = 5");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            PrintRotation_Sendcode(0, 5, 3, 9, m_sbData);
            PrintRotation_Changeline();
            m_sbData = new StringBuilder("iWidth = 6");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("12345678");
            PrintRotation_Sendcode(0, 6, 3, 9, m_sbData);
            PrintRotation_Changeline();
            m_sbData = new StringBuilder("CODE128");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            PrintRotation_Sendcode(0, 4, 3, 10, m_sbData);
            PrintRotation_Changeline();
            PrintRotation_Data();

            PrintFeedDot(20);
            SetRotation_Intomode();

            m_sbData = new StringBuilder("ITF 120600010007409577");
            PrintRotation_Sendtext(m_sbData, 0); 
            m_sbData = new StringBuilder("iWidth = 6");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("120600010007409577");
            PrintRotation_Sendcode(0, 6, 3, 5, m_sbData);
            PrintRotation_Changeline();
            PrintRotation_Changeline();

            m_sbData = new StringBuilder("iWidth = 5");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("123456789012");
            PrintRotation_Sendcode(0, 5, 3, 5, m_sbData);
            PrintRotation_Changeline();
            PrintRotation_Changeline();


            m_sbData = new StringBuilder("iWidth = 4");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("120600010007409577");
            PrintRotation_Sendcode(0, 4, 3, 5, m_sbData);
            PrintRotation_Changeline();

            m_sbData = new StringBuilder("iWidth = 3");
            PrintRotation_Sendtext(m_sbData, 0);
            m_sbData = new StringBuilder("120600010007409577");
            PrintRotation_Sendcode(0, 3, 3, 5, m_sbData);
            PrintRotation_Changeline();
            //m_sbData = new StringBuilder("DrawCODEEAN14");
            //PrintRotation_Sendtext(m_sbData, 0);
            //m_sbData = new StringBuilder("123456789012");
            //PrintRotation_Sendcode(0, 3, 5, 12, m_sbData);
            //PrintRotation_Changeline();

            PrintRotation_Changeline(); 
            PrintRotation_Data();

            PrintFeedDot(90); 
            PrintCutpaper(1);
            

        }
        

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            try
            {
                if (m_iInit == 0)
                    SetClose();
                
            }
            catch (Exception ex)
            {
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {

            StringBuilder sbData = new StringBuilder(textBox3.Text);  
            int iNums = Regex.Matches(textBox3.Text, @";").Count;
            SetNvbmp(iNums, sbData);
        }

        private void button6_Click(object sender, EventArgs e)
        {
            int iNvindex = int.Parse(cboNvbmp.Text);
            PrintNvbmp(iNvindex, 48);
            PrintNvbmp(iNvindex, 49);
            PrintNvbmp(iNvindex, 50);
            PrintNvbmp(iNvindex, 51);
        }

        private void button7_Click(object sender, EventArgs e)
        {
            try
            {
                //Debug.WriteLine("=========Begin"); 
                //Debug.WriteLine(DateTime.Now.ToLocalTime().ToString());
                int iIndex = 0;
                int iCount = cboSDKFunction.Items.Count;
                string strSDKFunction = "";
                for (iIndex = 0; iIndex < iCount; iIndex++)
                {
                    strSDKFunction = cboSDKFunction.GetItemText(cboSDKFunction.Items[iIndex]) + "Demo";

                    PrintFeedDot(20);
                    m_sbData = new StringBuilder(strSDKFunction + ";");
                    PrintString(m_sbData, 0);  
                     

                    Type type = Type.GetType("Msprintcsharp.Form1");
                    MethodInfo method = type.GetMethod(strSDKFunction);
                    object obj = Activator.CreateInstance(type);
                    method.Invoke(obj, null);

                    SetClean();
                    SetCommandmode(3);
 
                } 
                button3_Click(sender, e);

                //Debug.WriteLine("=========End");
                //Debug.WriteLine(DateTime.Now.ToLocalTime().ToString());
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }  
        }

        private void button8_Click(object sender, EventArgs e)
        {
            try
            {
 
                String strValue = ""; 
                textBox5.Text = "";
                if (m_iInit != 0)
                {
                    MessageBox.Show("No initialization!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
                int iIndex = int.Parse(cboInfoIdx.Text); 
                //StringBuilder stringBuilder = new StringBuilder("                   ");
                byte[] bRect = new byte[128];

                if (GetProductinformation(iIndex, bRect, 0) == 0)
                {
                    if (iIndex == 7)
                    {
                        strValue = string.Format("0x{0:X2}{1:X2}", bRect[0], bRect[1]);
                        textBox5.Text = strValue;
                    }
                    else
                    {
                        textBox5.Text =Encoding.ASCII.GetString(bRect);
                    }
                }
                else
                {
                    MessageBox.Show("GetProductinformation failure!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }  
            
        }

        private void button9_Click(object sender, EventArgs e)
        {
            try
            {
                textBox6.Text = ""; 
                if (m_iInit != 0)
                {
                    MessageBox.Show("No initialization!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }

                StringBuilder stringBuilder = new StringBuilder("                                 ");
                if (GetPrintIDorName(stringBuilder) == 0)
                {
                    textBox6.Text = stringBuilder.ToString().Trim();
                }
                else
                {
                    MessageBox.Show("GetPrintIDorName failure!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }  

            
        }

        private void button10_Click(object sender, EventArgs e)
        {
            try
            {
                if (textBox6.Text.Trim() == "")
                {
                    MessageBox.Show("PrintIDorName is empty!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;

                }

                if (m_iInit != 0)
                {
                    MessageBox.Show("No initialization!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }

                StringBuilder stringBuilder = new StringBuilder(textBox6.Text.Trim());
                if (SetPrintIDorName(stringBuilder) == 0)
                {
                    //Restartup printer
                    System.Threading.Thread.Sleep(1200);
                    btnInit_Click(sender, e); 
                }
                else
                {
                    MessageBox.Show("SetPrintIDorName failure!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }  

        }

        private void btnCheckSum_Click(object sender, EventArgs e)
        {
            try
            {
                StringBuilder stringBuilder = new StringBuilder("                   ");
                string strFunction = cboCheckSum.SelectedItem.ToString();
                byte[] bByte = new byte[65536];
                byte[] bRect = new byte[10];
                bRect[0] = 0;
                int iIndex = 0;
                int iValue = 0;
                bByte[iIndex++] = 0x12;
                bByte[iIndex++] = 0xAA;
                bByte[iIndex++] = 0x0;
                bByte[iIndex++] = 0x0;

                if(strFunction=="PrintSelfcheck")
                {
                    bByte[iIndex++] = 0x1D;
                    bByte[iIndex++] = 0x28;
                    bByte[iIndex++] = 0x41;
                    bByte[iIndex++] = 0x02;
                    bByte[iIndex++] = 0x00;
                    bByte[iIndex++] = 0x00;
                    bByte[iIndex++] = 0x02;
                }
                else if(strFunction=="PrintString")
                {
                    for (int i = 0; i < 1000; i++)
                    {
                        for (int j = 0x30; j < 0x3A; j++)
                            bByte[iIndex++] = (byte)j; 
                    } 
                    bByte[iIndex++] = 0x0A;

                }
                else if(strFunction=="PrintFeedDot")
                {
                    bByte[iIndex++] = 0x1B;
                    bByte[iIndex++] = 0x4A;
                    bByte[iIndex++] = 0x20;  
                }
                else if(strFunction=="PrintCutpaper")
                {
                    bByte[iIndex++] = 0x1B;
                    bByte[iIndex++] = 0x69; 
                }

                if (iIndex > 4)
                {
                    iValue = iIndex - 4;
                    bByte[2] = (byte)(iValue /256);
                    bByte[3] = (byte)iValue;

                    iValue = 0;
                    for(int i=4;i<iIndex;i++)
                        iValue = iValue + bByte[i];

                    bByte[iIndex++] = (byte)(iValue / 256);
                    bByte[iIndex++] = (byte)iValue;

                    GetTransmit(bByte, iIndex, bRect, 1); 

                    if (bRect[0] != 0x19)
                    {
                        MessageBox.Show("CheckSum Error!", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }  

        }

        public void PrintTCTest()
        {
        //    m_sbData = new StringBuilder("abcdef123ghjil");
        //    PrintPdf417(5, 100, 100, 100, m_sbData);
        //    PrintFeedline(3);
        //    PrintFeedline(3);
        //    PrintFeedDot(250);
          //  PrintCutpaper(0); 

            StringBuilder sbData = new StringBuilder("logo.bmp");
            PrintDiskbmpfile(sbData); 
            PrintFeedline(1);
            m_sbData = new StringBuilder("第13025期                   2016年06月20日开奖\r\n123456-789012-345678-901234   123456   eehtha\r\n----------------------------------------------\r\n   前区胆 01 02 03 04\r\n   前区拖 05 06 07 08 09 10 11\r\n          12 13 14 15 16 17 18\r\n          19 20 21 22 23 24 25\r\n          26 27 28 29 30 31 32\r\n          33 34 35\r\n   后区胆 01\r\n   后区拖 02 03 04 05 06 07 08\r\n          09 10 11 12\r\n----------------------------------------------\r\n\r\n\r\n01-000007-101   00003    2013/04/23  15:35:05");
            PrintString(m_sbData, 0);

            PrintFeedline(1);
            m_sbData = new StringBuilder("abcdef123ghjil");
            PrintPdf417(3, 120, 20, 6, m_sbData);

            PrintFeedDot(120);
       //     PrintFeedline(3);
      //      PrintMarkcutpaper(0); 
         //    PrintCutpaper(1);
        }

        public void PrintBSW()
        {

            byte[] bByte = new byte[256];
            int iIndex = 0;
            int iValue = 0;
            for (iValue = 0x70; iValue < 0x90; iValue++)
            {
                bByte[iIndex++] = (byte)iValue;
            }

            bByte[iIndex++] = 0x0A;

       //     PrintTransmit(bByte, iIndex);
            //PrintMarkcutpaper(0);  

            m_sbData = new StringBuilder("\x70\x71\u0080\u0081"); 
       //     PrintString(m_sbData, 0);

    //        byte[] encodedBytes = Encoding.GetEncoding("utf-8").GetBytes("中国"); 
            byte[] encodedBytes = System.Text.Encoding.GetEncoding("iran").GetBytes("۰۱۲۳۳۵۶۷۸۹");
             

//byte[] encodedBytes = System.Text.Encoding.ASCII.GetBytes("中国");
            PrintTransmit(encodedBytes, encodedBytes.Length);
            PrintFeedline(10);
    //        PrintMarkcutpaper(0); 



        }

        private void btnExample_Click(object sender, EventArgs e)
        {
            switch (cboExample.SelectedIndex)
            {
                case 0: //ITF Code
                    Example_ITFCode();
                    break;
                case 1: //
                    Example_Test();
                    break;
            }
        }

        void Example_ITFCode()
        {
            try
            {
                m_sbData = new StringBuilder("Rotation Begin");
                PrintString(m_sbData, 0); 

                SetRotation_Intomode();
                //SetRotation_Leftspace(30);
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();
                PrintRotation_Changeline();  

                m_sbData = new StringBuilder("                  120600010007409577");
                PrintRotation_Sendtext(m_sbData, 0);
                m_sbData = new StringBuilder("                  ");
                PrintRotation_Sendtext(m_sbData, 1);
                m_sbData = new StringBuilder("120600010007409577");
                PrintRotation_Sendcode(0, 3, 3, 5, m_sbData);
                PrintRotation_Data();

                m_sbData = new StringBuilder("Rotation end");
                PrintString(m_sbData, 0);
                PrintFeedDot(90);
                PrintCutpaper(1);
                return;

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
        }


        
        void Example_Test()
        {
            try
            {
                SetClean();
                for (int i = 0; i < 1; i++)
                {
                    m_sbData = new StringBuilder("this is a normal line");
                    PrintString(m_sbData, 0);
               //     SetBold(0);
                    m_sbData = new StringBuilder("this is a bold line");
                    PrintString(m_sbData, 0);
                 //  SetBold(0);
                    m_sbData = new StringBuilder("this is a normal line");
                    PrintString(m_sbData, 0);
                        SetClean();
                    m_sbData = new StringBuilder("this is a normal line");
                    //  PrintString(m_sbData, 0);   
                }
                return;

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
        }
    
    }
}
